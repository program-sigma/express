Ответьте на следующие вопросы
29. Поясните понятие Шаблонизация.
30. Поясните понятие Шаблон (template).
31. Поясните понятие Контекст шаблона (template context).
32. Поясните понятие Макет (layout).
33. Поясните понятие Частичное представление (partial-view).
34. Поясните понятие Хелпер (helper).
35. Перечислите встроенные хелперы Handlebars.
36. Поясните понятие Статический файл.
37. Поясните назначение http-заголовков: Cache-control, ETag, Last-Modified, If-Modified-Since, If-None-Match, Expires.
38. Поясните свойство __dirname объекта global.
39. Поясните назначение и принцип работы метода response.download().
40. Поясните назначение и принцип работы метода response.attachment().
41. Поясните назначение http-заголовка: Content-Disposition: attachment.

**29. Шаблонизация**
Шаблонизация - это процесс разделения представления логики приложения на отдельные файлы, называемые шаблонами. Эти шаблоны содержат статический HTML и динамические выражения, которые вставляются в HTML во время выполнения.

**30. Шаблон (template)**
Шаблон - это файл или часть кода, который используется как основа для генерации HTML. Шаблоны могут содержать статический HTML и динамические выражения, которые заменяются на конкретные значения во время выполнения.

**31. Контекст шаблона (template context)**
Контекст шаблона - это объект, который передается в шаблон и используется для заполнения динамических выражений. Свойства этого объекта соответствуют переменным в шаблоне.

**32. Макет (layout)**
Макет - это основной шаблон, который содержит общие для всех страниц элементы, такие как заголовок, подвал и навигационное меню. Другие шаблоны, называемые частичными представлениями, вставляются в макет в определенных местах.

**33. Частичное представление (partial-view)**
Частичное представление - это шаблон, который может быть вставлен в другие шаблоны или макеты. Они обычно используются для повторно используемых фрагментов интерфейса, таких как навигационные меню или виджеты.

**34. Хелпер (helper)**
Хелпер - это функция, которую можно вызвать внутри шаблона. Хелперы могут выполнять различные задачи, такие как форматирование даты, создание ссылок или выполнение сложных вычислений.

**35. Встроенные хелперы Handlebars**
Handlebars включает в себя несколько встроенных хелперов, таких как `each` для итерации по массивам или объектам, `if` и `unless` для условного рендеринга, и `with` для изменения текущего контекста.

**36. Статический файл**
Статический файл - это файл, который сервер отправляет клиенту без каких-либо изменений. Это могут быть HTML-файлы, CSS-стили, JavaScript-скрипты, изображения и другие медиафайлы.

**37. HTTP-заголовки**
- `Cache-Control`: Управляет кэшированием ресурса.
- `ETag`: Идентификатор версии ресурса, используется для определения, изменился ли ресурс с момента последнего запроса.
- `Last-Modified`: Дата последнего изменения ресурса.
- `If-Modified-Since`: Запрашивает ресурс только в том случае, если он был изменен после указанной даты.
- `If-None-Match`: Запрашивает ресурс только в том случае, если его `ETag` не совпадает с указанным.
- `Expires`: Дата и время, когда кэш ресурса станет устаревшим.

**38. __dirname**
`__dirname` - это глобальная переменная в Node.js, которая содержит абсолютный путь к директории текущего модуля.

**39. response.download()**
Метод `response.download()` в Express.js инициирует загрузку файла. Он устанавливает заголовки, которые указывают браузеру загрузить файл, вместо отображения его.

**40. response.attachment()**
Метод `response.attachment()` в Express.js устанавливает заголовок `Content-Disposition` с модификатором `attachment`, что указывает браузеру предложить файл для загрузки.

**41. Content-Disposition: attachment**
HTTP-заголовок `Content-Disposition: attachment` указывает браузеру предложить пользователю загрузить содержимое ответа, вместо отображения его. Он часто используется вместе с методами `response.download()` или `response.attachment()` в Express.js.